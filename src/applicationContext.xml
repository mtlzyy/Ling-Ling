<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 配置包扫描器,以便于作用@Service注解 -->
	<context:component-scan base-package="com.music.dao.service"></context:component-scan>
	
	<!-- 配置数据源
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@192.168.3.14:1521:orcl</value>
		</property>
		<property name="username">
			<value>system</value>
		</property>
		<property name="password">
			<value>niit</value>
		</property>
	</bean> -->
	
	
	<!-- 使用C3P0数据源--> 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:oracle:thin:@192.168.3.14:1521:orcl</value>
		</property>
		<property name="user">
			<value>system</value>
		</property>
		<property name="password">
			<value>niit</value>
		</property>
		<property name="maxPoolSize" value="30"></property>
	</bean>
	
	
	<!-- 配置SqlSessionFactory,替换MyBatis的会话工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置DAO映射文件 
		<property name="mapperLocations">
			<value>classpath:com/music/dao/mapper/*.xml</value>
		</property>
		-->
		<!-- 配置外部的MyBatis文件 -->
		<property name="configLocation">
			<value>classpath:config.xml</value>
		</property>
	</bean>
	
	<!-- 配置DAO实例的扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.music.dao"></property>
	</bean>
	
	<!-- 事务切面 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="update*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	 -->
	
	<!-- 事务通知 -->
	<tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
		<!-- 配置事务传播属性(事务的作用策略) -->
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	  
	 
	<!-- 使用 @Transactionaf注解DAO方法需要进行注解驱动的配置,注入事务管理切面
	<tx:annotation-driven transaction-manager="transactionManager"/>
	 --> 
	 
	 <bean id="testAspect" class="com.music.aspect.MusicAspect"></bean>
	 
	 <!-- 作用切面 -->
	 <aop:config>
	 	<aop:pointcut expression="execution(* com.music.dao.service.*.*(..))" id="servicePoint"/>
	 	<aop:advisor advice-ref="transactionInterceptor" pointcut-ref="servicePoint"/>
	 </aop:config>
	 
	 
</beans>

